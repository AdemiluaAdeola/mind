# Generated by Django 4.2.7 on 2025-08-25 08:07

import ckeditor_uploader.fields
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Blog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=200)),
                ('slug', models.SlugField(blank=True, max_length=200, unique=True)),
                ('excerpt', models.TextField(blank=True, help_text='Brief summary of the blog post (max 300 characters)')),
                ('content', ckeditor_uploader.fields.RichTextUploadingField()),
                ('featured_image', models.ImageField(blank=True, help_text='Recommended size: 1200x675 pixels', null=True, upload_to='blog_images/%Y/%m/%d/')),
                ('status', models.CharField(choices=[('Draft', 'Draft'), ('Published', 'Published'), ('Archived', 'Archived')], default='Draft', max_length=10)),
                ('is_verified', models.BooleanField(default=False)),
                ('is_featured', models.BooleanField(default=False)),
                ('views', models.PositiveIntegerField(default=0)),
                ('meta_title', models.CharField(blank=True, max_length=200)),
                ('meta_description', models.CharField(blank=True, max_length=300)),
                ('allow_comments', models.BooleanField(default=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blogs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('slug', models.SlugField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('order', models.PositiveIntegerField(default=0, help_text='Display order in lists')),
            ],
            options={
                'verbose_name_plural': 'Categories',
                'ordering': ['order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('content', models.TextField(max_length=1000)),
                ('is_approved', models.BooleanField(default=False)),
                ('blog', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='core.blog')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Speaker',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100)),
                ('bio', models.TextField(help_text='Brief biography of the speaker')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='speaker_photos/%Y/%m/%d/')),
                ('website', models.URLField(blank=True)),
                ('twitter', models.CharField(blank=True, max_length=100)),
                ('linkedin', models.URLField(blank=True)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=50, unique=True)),
                ('slug', models.SlugField(unique=True)),
                ('description', models.TextField(blank=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Webinar',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=200)),
                ('slug', models.SlugField(blank=True, max_length=200, unique=True)),
                ('description', models.TextField()),
                ('featured_image', models.ImageField(help_text='Recommended size: 1200x675 pixels', upload_to='webinar_images/%Y/%m/%d/')),
                ('start_datetime', models.DateTimeField()),
                ('duration', models.PositiveIntegerField(help_text='Duration in minutes', validators=[django.core.validators.MinValueValidator(5), django.core.validators.MaxValueValidator(480)])),
                ('status', models.CharField(choices=[('upcoming', 'Upcoming'), ('live', 'Live'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='upcoming', max_length=10)),
                ('price', models.DecimalField(decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('capacity', models.PositiveIntegerField(default=100)),
                ('is_featured', models.BooleanField(default=False)),
                ('meeting_url', models.URLField(blank=True, help_text='Zoom/Google Meet link')),
                ('recording_url', models.URLField(blank=True, help_text='Link to webinar recording')),
                ('host', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='hosted_webinars', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-start_datetime'],
            },
        ),
        migrations.CreateModel(
            name='WebinarSpeaker',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_main_speaker', models.BooleanField(default=False)),
                ('order', models.PositiveIntegerField(default=0, help_text='Display order')),
                ('speaker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.speaker')),
                ('webinar', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.webinar')),
            ],
            options={
                'ordering': ['order'],
                'unique_together': {('webinar', 'speaker')},
            },
        ),
        migrations.CreateModel(
            name='WebinarResource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=200)),
                ('resource_type', models.CharField(choices=[('slide', 'Presentation Slides'), ('video', 'Video'), ('document', 'Document'), ('link', 'External Link'), ('other', 'Other')], default='document', max_length=10)),
                ('file', models.FileField(blank=True, null=True, upload_to='webinar_resources/%Y/%m/%d/')),
                ('url', models.URLField(blank=True)),
                ('is_preview', models.BooleanField(default=False, help_text='Available to everyone (not just attendees)')),
                ('description', models.TextField(blank=True)),
                ('order', models.PositiveIntegerField(default=0, help_text='Display order')),
                ('webinar', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='resources', to='core.webinar')),
            ],
            options={
                'ordering': ['order', 'title'],
            },
        ),
        migrations.AddField(
            model_name='webinar',
            name='speakers',
            field=models.ManyToManyField(related_name='webinars', through='core.WebinarSpeaker', to='core.speaker'),
        ),
        migrations.CreateModel(
            name='CommentLike',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('comment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.comment')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='comment',
            name='likes',
            field=models.ManyToManyField(related_name='liked_comments', through='core.CommentLike', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='comment',
            name='parent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='core.comment'),
        ),
        migrations.AddField(
            model_name='comment',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='blog',
            name='category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='blogs', to='core.category'),
        ),
        migrations.AddField(
            model_name='blog',
            name='tags',
            field=models.ManyToManyField(blank=True, related_name='blogs', to='core.tag'),
        ),
        migrations.CreateModel(
            name='WebinarRegistration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('full_name', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=254)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('confirmed', 'Confirmed'), ('cancelled', 'cancelled')], max_length=255)),
                ('attendance_confirmed', models.BooleanField(default=False)),
                ('question', models.TextField(verbose_name='Any questions for the speaker')),
                ('joined_at', models.DateTimeField(blank=True, null=True)),
                ('left_at', models.DateTimeField(blank=True, null=True)),
                ('payment_reference', models.FileField(upload_to='payment')),
                ('webinar', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='registrations', to='core.webinar')),
            ],
            options={
                'ordering': ['-created_at'],
                'unique_together': {('webinar', 'email')},
            },
        ),
        migrations.AddIndex(
            model_name='webinar',
            index=models.Index(fields=['status', 'start_datetime'], name='core_webina_status_5c286e_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='commentlike',
            unique_together={('comment', 'user')},
        ),
        migrations.AddIndex(
            model_name='comment',
            index=models.Index(fields=['blog', 'is_approved'], name='core_commen_blog_id_3ed3d9_idx'),
        ),
        migrations.AddIndex(
            model_name='blog',
            index=models.Index(fields=['status', 'is_verified'], name='core_blog_status_5bd5f6_idx'),
        ),
        migrations.AddIndex(
            model_name='blog',
            index=models.Index(fields=['created_at'], name='core_blog_created_4e1184_idx'),
        ),
    ]
